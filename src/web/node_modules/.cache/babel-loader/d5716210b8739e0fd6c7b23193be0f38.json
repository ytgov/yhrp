{"remainingRequest":"/Users/edgarallanglez/Documents/Develop/bizont/yhrp/src/web/node_modules/babel-loader/lib/index.js!/Users/edgarallanglez/Documents/Develop/bizont/yhrp/src/web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/edgarallanglez/Documents/Develop/bizont/yhrp/src/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/edgarallanglez/Documents/Develop/bizont/yhrp/src/web/src/components/Grid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/edgarallanglez/Documents/Develop/bizont/yhrp/src/web/src/components/Grid.vue","mtime":1637992831000},{"path":"/Users/edgarallanglez/Documents/Develop/bizont/yhrp/src/web/babel.config.js","mtime":1637992831000},{"path":"/Users/edgarallanglez/Documents/Develop/bizont/yhrp/src/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/edgarallanglez/Documents/Develop/bizont/yhrp/src/web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/edgarallanglez/Documents/Develop/bizont/yhrp/src/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/edgarallanglez/Documents/Develop/bizont/yhrp/src/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNlYXJjaC5qcyI7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgYXhpb3MgPSByZXF1aXJlKCJheGlvcyIpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJHcmlkIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGl0ZW1zOiBbXSwKICAgICAgc2VhcmNoOiAiIiwKICAgICAgb3B0aW9uczoge30sCiAgICAgIHRvdGFsTGVuZ3RoOiAwLAogICAgICBoZWFkZXJzOiBbewogICAgICAgIHRleHQ6ICJpZCIsCiAgICAgICAgdmFsdWU6ICJpZCIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJuYW1lIiwKICAgICAgICB2YWx1ZTogIm5hbWUiCiAgICAgIH1dLAogICAgICBwYWdlOiAxLAogICAgICBwYWdlQ291bnQ6IDAsCiAgICAgIGl0ZWFtc1BlclBhZ2U6IDEwCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIG9wdGlvbnM6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICB0aGlzLmdldERhdGFGcm9tQXBpKCk7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0sCiAgICBzZWFyY2g6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICB0aGlzLmdldERhdGFGcm9tQXBpKCk7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldERhdGFGcm9tQXBpKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREYXRhRnJvbUFwaTogZnVuY3Rpb24gZ2V0RGF0YUZyb21BcGkoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICBheGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL2RhdGE/c2VhcmNoPSIgKyB0aGlzLnNlYXJjaCwgdGhpcy5vcHRpb25zKS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcC5kYXRhKTsKICAgICAgICBfdGhpcy5pdGVtcyA9IHJlc3AuZGF0YS5kYXRhOyAvL3RoaXMucGFnaW5hdGlvbi50b3RhbExlbmd0aCA9IHJlc3AuZGF0YS5tZXRhLmNvdW50OwoKICAgICAgICBfdGhpcy50b3RhbExlbmd0aCA9IHJlc3AuZGF0YS5tZXRhLmNvdW50OwogICAgICAgIGNvbnNvbGUubG9nKF90aGlzLnRvdGFsTGVuZ3RoKTsKICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihlcnIpOwogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Grid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA,EAJA;AAKA,MAAA,WAAA,EAAA,CALA;AAMA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,CANA;AAUA,MAAA,IAAA,EAAA,CAVA;AAWA,MAAA,SAAA,EAAA,CAXA;AAYA,MAAA,aAAA,EAAA;AAZA,KAAA;AAAA,GAFA;AAgBA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,OADA,qBACA;AACA,aAAA,cAAA;AACA,OAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KADA;AAOA,IAAA,MAAA,EAAA;AACA,MAAA,OADA,qBACA;AACA,aAAA,cAAA;AACA,OAHA;AAIA,MAAA,IAAA,EAAA;AAJA;AAPA,GAhBA;AA8BA,EAAA,OA9BA,qBA8BA;AACA,SAAA,cAAA;AACA,GAhCA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AAEA,MAAA,KAAA,CACA,IADA,CAEA,2CAAA,KAAA,MAFA,EAGA,KAAA,OAHA,EAKA,IALA,CAKA,UAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAFA,CAGA;;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA;AAEA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,WAAA;AAEA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAdA,EAeA,KAfA,CAeA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AAAA,OAfA,EAgBA,OAhBA,CAgBA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAlBA;AAmBA;AAvBA;AAjCA,CAAA","sourcesContent":["<template>\n  <div class=\"books\">\n    <h1>This is a data grid</h1>\n\n    <v-banner class=\"mb-5\">\n      The data table below is connected to a server-side API which waits 1\n      second before returning results. All pagination and sort is done\n      server-side.\n    </v-banner>\n    <v-text-field v-model=\"search\" label=\"Search\"></v-text-field>\n\n    <v-data-table\n      dense\n      :items=\"items\"\n      :headers=\"headers\"\n      :options.sync=\"options\"\n      :loading=\"loading\"\n      :server-items-length=\"totalLength\"      \n      :search=\"search\"\n    ></v-data-table>\n  </div>\n</template>\n\n<script>\nconst axios = require(\"axios\");\n\nexport default {\n  name: \"Grid\",\n  data: () => ({\n    loading: false,\n    items: [],\n    search: \"\",\n    options: {},\n    totalLength: 0,\n    headers: [\n      { text: \"id\", value: \"id\" },\n      { text: \"name\", value: \"name\" },\n    ],\n    page: 1,\n    pageCount: 0,\n    iteamsPerPage: 10,\n  }),\n  watch: {\n    options: {\n      handler() {\n        this.getDataFromApi();\n      },\n      deep: true,\n    },\n    search: {\n      handler() {\n        this.getDataFromApi();\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    this.getDataFromApi();\n  },\n  methods: {\n    getDataFromApi() {\n      this.loading = true;\n\n      axios\n        .post(\n          \"http://localhost:3000/api/data?search=\" + this.search,\n          this.options\n        )\n        .then((resp) => {\n          console.log(resp.data);\n          this.items = resp.data.data;\n          //this.pagination.totalLength = resp.data.meta.count;\n          this.totalLength = resp.data.meta.count;\n\n          console.log(this.totalLength);\n\n          this.loading = false;\n        })\n        .catch((err) => console.error(err))\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}